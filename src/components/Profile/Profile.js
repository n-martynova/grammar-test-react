import React, { Component } from 'react'
import './Profile.scss'
import * as yup from 'yup'
import InputMask from 'react-input-mask'

class Profile extends Component {
    constructor(props) {
        super(props)

        this.state = {
            name: '',
            email: '',
            phone: '',
            social: '',
            cv: '',
            about: '',

            nameError: '',
            emailError: '',
            phoneError: '',
            socialError: '',
            cvError: '',
            aboutError: '',
        }

        this.handleSubmit = this.handleSubmit.bind(this)
        this.displayErrorMessages = this.displayErrorMessages.bind(this)
        this.handleInvalidFocus = this.handleInvalidFocus.bind(this)
        this.handleChange = this.handleChange.bind(this)

        this.profileSchema = yup.object().shape({
            name: yup
                .string()
                .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ')
                .min(5, '–ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ'),
            email: yup
                .string()
                .email('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email')
                .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),
            phone: yup
                .string()
                .length(18, '–¢–µ–ª–µ—Ñ–æ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π')
                .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),
            social: yup
                .string()
                .url('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏'),
            cv: yup
                .string()
                .url('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏'),
            about: yup
                .string()
                .min(250, '–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑ :(')
                .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),
        })
    }

    handleSubmit(event) {
        event.preventDefault()

        this.profileSchema.isValid(
                {
                    name: this.state.name,
                    email: this.state.email,
                    phone: this.state.phone,
                    social: this.state.social,
                    cv: this.state.cv,
                    about: this.state.about
                }).then((valid) => {
                    if (valid) {
                        this.props.showFinal()
                    } else {
                        this.displayErrorMessages()
                    } 
                })
    }

    displayErrorMessages() {
        this.profileSchema.validate(
            {
                name: this.state.name,
                email: this.state.email,
                phone: this.state.phone,
                social: this.state.social,
                cv: this.state.cv,
                about: this.state.about
            }, { abortEarly: false })
            .catch((errors) => {
                errors.inner.forEach((error) => {
                    this.setState({
                        [error.path + 'Error']: error.message
                    })
                    const invalidInput = document.querySelector(`[name=${error.path}]`)
                    invalidInput.classList.add('invalid')
                })
                const firstInvalidInput = document.querySelector('.invalid')
                firstInvalidInput.scrollIntoView({block: 'center', behavior: 'smooth'})
            })
    }

    handleInvalidFocus(event) {
        event.target.classList.remove('invalid')
    }

    handleChange(event) {
        const target = event.target
        const value = target.value
        const name = target.name

        this.setState({
            [name]: value
        })
    }

    render() {
        const renderError = (errorName) => {
            return(
                <span className={this.state[errorName] && 'error-message'}>{this.state[errorName]}</span>
            )
        }

        return (
        <section className="Profile">
            <div className="intro">
                <p>–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –º—ã –Ω–∞—á–∞–ª–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Ç–æ–±–æ–π.</p>
            </div>

            <div className='shadow-box'>
                <form onSubmit={this.handleSubmit}>
                    <h2>–ê–Ω–∫–µ—Ç–∞</h2>
                    <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2‚Äì3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.</p>

                    <div className="profile-form">
                        <div className="input-wrapper js-input-wrapper">
                            <input
                                className="js-input"
                                value={this.state.name}
                                onChange={this.handleChange}
                                type="text"
                                autoComplete="true"
                                name="name"
                                placeholder="–§–∞–º–∏–ª–∏—è –∏ –∏–º—è"
                                onFocus={this.handleInvalidFocus}
                            />
                            {renderError('nameError')}
                        </div>
                        <div className="input-wrapper js-input-wrapper">
                            <input
                                className="js-input"
                                value={this.state.email}
                                onChange={this.handleChange}
                                type="text"
                                autoComplete="email"
                                name="email"
                                placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
                                onFocus={this.handleInvalidFocus}
                            />
                            {renderError('emailError')}
                        </div>
                        <div className="input-wrapper js-input-wrapper">
                            <InputMask 
                                className="js-input"
                                mask="+7 (999) 999-99-99" 
                                value={this.state.phone}
                                onChange={this.handleChange} 
                                type="tel"
                                autoComplete="tel"
                                name="phone"
                                maskPlaceholder="–•"
                                alwaysShowMask={true}
                                onFocus={this.handleInvalidFocus}
                            />
                            {renderError('phoneError')}
                        </div>
                        <div className="input-wrapper js-input-wrapper">
                            <textarea
                                className="js-input"
                                value={this.state.social}
                                onChange={this.handleChange}
                                type="text"
                                name="social"
                                placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ—Ü—Å–µ—Ç—å"
                                rows="1"
                                onFocus={this.handleInvalidFocus}
                            />
                                {renderError('socialError')}
                            <label htmlFor="social" className="horizontal-label">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤&nbsp;–∫–æ–Ω—Ç–∞–∫—Ç–µ –∏–ª–∏ —Ñ–µ–π—Å–±—É–∫–µ</label>
                        </div>

                        <div className="input-wrapper js-input-wrapper">
                            <textarea
                                className="js-input"
                                value={this.state.cv}
                                onChange={this.handleChange}
                                type="text"
                                name="cv"
                                placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–∑—é–º–µ"
                                rows="1"
                                onFocus={this.handleInvalidFocus}
                            />
                            {renderError('cvError')}
                            <label htmlFor="cv" className="horizontal-label">–ï—Å–ª–∏ –µ—Å—Ç—å</label>
                        </div>

                        <div className="input-wrapper js-input-wrapper">
                            <textarea
                                className="js-input"
                                value={this.state.about}
                                onChange={this.handleChange}
                                type="text"
                                name="about"
                                placeholder='–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑ –æ —Å–µ–±–µ. –ù–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –≤—Å—ë ‚Äî —Ö–æ–±–±–∏, —É–≤–ª–µ—á–µ–Ω–∏—è, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è üôÇ –ü–æ—á–µ–º—É –≤—ã –ø–æ–¥–æ–π–¥–µ—Ç–µ –Ω–∞–º –∏ –∫–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç—É —Ä–∞–±–æ—Ç—É? –ö–∞–∫–∏–µ –≤ –Ω–µ–π –º–æ–≥—É—Ç –±—ã—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –∫–∞–∫ –∏—Ö —Ä–µ—à–∞—Ç—å? –ö–∞–∫–∏–µ –ø–ª—é—Å—ã –∏ –ø–æ—á–µ–º—É —ç—Ç–∞ —Ä–∞–±–æ—Ç–∞ –∫—Ä—É—Ç–∞—è?'
                                rows="10"
                                onFocus={this.handleInvalidFocus}
                            />
                            {renderError('aboutError')}
                            <label htmlFor="about" className="horizontal-label">–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ä–∞–±–æ—Ç–∞ –≤ —á–∞—Ç–µ –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–∞ —Å –ø–∏—Å—å–º–µ–Ω–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º —Å–≤–æ–∏—Ö –º—ã—Å–ª–µ–π. –ï—Å–ª–∏ –ø–∏—Å—å–º–æ —à–∞–±–ª–æ–Ω–Ω–æ–µ –∏–ª–∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π (250 —Å–∏–º–≤–æ–ª–æ–≤) ‚Äî —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –µ–≥–æ –Ω–µ—Ç <span role="img" aria-label="smile">üôÇ</span></label>
                        </div>
                    </div>

                    <button className="button" type="submit">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É</button>

                    <p className="agreement">–Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å —Å–≤–æ–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ—Å—è –≤ –∞–Ω–∫–µ—Ç–µ –∏ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö, –≤ –ö–ò–í–ò –ë–∞–Ω–∫ (–ê–û) –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ö–ò–í–ò –ë–∞–Ω–∫ (–ê–û) –º–æ–≥ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –º–Ω–µ –≤–∞–∫–∞–Ω—Å–∏–∏. –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å, —á—Ç–æ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∏&nbsp;–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –ö–ò–í–ò –ë–∞–Ω–∫ (–ê–û) –≤&nbsp;—Ç–µ—á–µ–Ω–∏–µ –¥–µ—Å—è—Ç–∏ –ª–µ—Ç, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å&nbsp;–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª.</p>
                    <p className="get-card">–ö—Å—Ç–∞—Ç–∏, –µ—Å–ª–∏ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–∞—Ä—Ç—ã –†–æ–∫–µ—Ç–±–∞–Ω–∫–∞, –∑–∞–∫–∞–∑–∞—Ç—å –º–æ–∂–Ω–æ <a href="https://rocketbank.ru/welcome/" className="external-link" target="_blank" rel="noopener noreferrer">–∑–¥–µ—Å—å</a>.</p>
                </form>
            </div>
        </section>
    )}
}

export default Profile