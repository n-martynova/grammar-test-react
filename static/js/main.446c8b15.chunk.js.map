{"version":3,"sources":["components/Profile/Profile.js","components/Final/Final.js","App.js","serviceWorker.js","index.js"],"names":["Profile","props","state","name","email","phone","social","cv","about","nameError","emailError","phoneError","socialError","cvError","aboutError","handleSubmit","bind","displayErrorMessages","handleInvalidFocus","handleChange","profileSchema","yup","shape","required","min","length","url","event","preventDefault","this","isValid","then","valid","showFinal","validate","abortEarly","catch","errors","inner","forEach","error","setState","path","message","document","querySelector","classList","add","scrollIntoView","block","behavior","target","remove","value","renderError","errorName","className","onSubmit","onChange","type","autoComplete","placeholder","onFocus","mask","maskPlaceholder","alwaysShowMask","rows","htmlFor","role","aria-label","href","rel","Component","final","classes","isMobile","App","currentStep","step","test","navigator","userAgent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.446c8b15.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Profile.scss'\nimport * as yup from 'yup'\nimport InputMask from 'react-input-mask'\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            phone: '',\n            social: '',\n            cv: '',\n            about: '',\n\n            nameError: '',\n            emailError: '',\n            phoneError: '',\n            socialError: '',\n            cvError: '',\n            aboutError: '',\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.displayErrorMessages = this.displayErrorMessages.bind(this)\n        this.handleInvalidFocus = this.handleInvalidFocus.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n\n        this.profileSchema = yup.object().shape({\n            name: yup\n                .string()\n                .required('Обязательное поле')\n                .min(5, 'Имя слишком короткое'),\n            email: yup\n                .string()\n                .email('Неправильный email')\n                .required('Обязательное поле'),\n            phone: yup\n                .string()\n                .length(18, 'Телефон слишком короткий')\n                .required('Обязательное поле'),\n            social: yup\n                .string()\n                .url('Неправильный формат ссылки'),\n            cv: yup\n                .string()\n                .url('Неправильный формат ссылки'),\n            about: yup\n                .string()\n                .min(250, 'Не похоже на подробный рассказ :(')\n                .required('Обязательное поле'),\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n\n        this.profileSchema.isValid(\n                {\n                    name: this.state.name,\n                    email: this.state.email,\n                    phone: this.state.phone,\n                    social: this.state.social,\n                    cv: this.state.cv,\n                    about: this.state.about\n                }).then((valid) => {\n                    if (valid) {\n                        this.props.showFinal()\n                    } else {\n                        this.displayErrorMessages()\n                    } \n                })\n    }\n\n    displayErrorMessages() {\n        this.profileSchema.validate(\n            {\n                name: this.state.name,\n                email: this.state.email,\n                phone: this.state.phone,\n                social: this.state.social,\n                cv: this.state.cv,\n                about: this.state.about\n            }, { abortEarly: false })\n            .catch((errors) => {\n                errors.inner.forEach((error) => {\n                    this.setState({\n                        [error.path + 'Error']: error.message\n                    })\n                    const invalidInput = document.querySelector(`[name=${error.path}]`)\n                    invalidInput.classList.add('invalid')\n                })\n                const firstInvalidInput = document.querySelector('.invalid')\n                firstInvalidInput.scrollIntoView({block: 'center', behavior: 'smooth'})\n            })\n    }\n\n    handleInvalidFocus(event) {\n        event.target.classList.remove('invalid')\n    }\n\n    handleChange(event) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        const renderError = (errorName) => {\n            return(\n                <span className={this.state[errorName] && 'error-message'}>{this.state[errorName]}</span>\n            )\n        }\n\n        return (\n        <section className=\"Profile\">\n            <div className=\"intro\">\n                <p>Предлагаем тебе заполнить анкету и ответить на наши вопросы, чтобы мы начали знакомство с тобой.</p>\n            </div>\n\n            <div className='shadow-box'>\n                <form onSubmit={this.handleSubmit}>\n                    <h2>Анкета</h2>\n                    <p>Заполните форму, и мы ответим в течение 2–3 рабочих дней.</p>\n\n                    <div className=\"profile-form\">\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <input\n                                className=\"js-input\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                type=\"text\"\n                                autoComplete=\"true\"\n                                name=\"name\"\n                                placeholder=\"Фамилия и имя\"\n                                onFocus={this.handleInvalidFocus}\n                            />\n                            {renderError('nameError')}\n                        </div>\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <input\n                                className=\"js-input\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                                type=\"text\"\n                                autoComplete=\"email\"\n                                name=\"email\"\n                                placeholder=\"Электронная почта\"\n                                onFocus={this.handleInvalidFocus}\n                            />\n                            {renderError('emailError')}\n                        </div>\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <InputMask \n                                className=\"js-input\"\n                                mask=\"+7 (999) 999-99-99\" \n                                value={this.state.phone}\n                                onChange={this.handleChange} \n                                type=\"tel\"\n                                autoComplete=\"tel\"\n                                name=\"phone\"\n                                maskPlaceholder=\"Х\"\n                                alwaysShowMask={true}\n                                onFocus={this.handleInvalidFocus}\n                            />\n                            {renderError('phoneError')}\n                        </div>\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <textarea\n                                className=\"js-input\"\n                                value={this.state.social}\n                                onChange={this.handleChange}\n                                type=\"text\"\n                                name=\"social\"\n                                placeholder=\"Ссылка на соцсеть\"\n                                rows=\"1\"\n                                onFocus={this.handleInvalidFocus}\n                            />\n                                {renderError('socialError')}\n                            <label htmlFor=\"social\" className=\"horizontal-label\">Ссылка на ваш профиль в&nbsp;контакте или фейсбуке</label>\n                        </div>\n\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <textarea\n                                className=\"js-input\"\n                                value={this.state.cv}\n                                onChange={this.handleChange}\n                                type=\"text\"\n                                name=\"cv\"\n                                placeholder=\"Ссылка на резюме\"\n                                rows=\"1\"\n                                onFocus={this.handleInvalidFocus}\n                            />\n                            {renderError('cvError')}\n                            <label htmlFor=\"cv\" className=\"horizontal-label\">Если есть</label>\n                        </div>\n\n                        <div className=\"input-wrapper js-input-wrapper\">\n                            <textarea\n                                className=\"js-input\"\n                                value={this.state.about}\n                                onChange={this.handleChange}\n                                type=\"text\"\n                                name=\"about\"\n                                placeholder='Подробный рассказ о себе. Нам интересно и важно знать всё — хобби, увлечения, достижения 🙂 Почему вы подойдете нам и как вы видите эту работу? Какие в ней могут быть трудности, как их решать? Какие плюсы и почему эта работа крутая?'\n                                rows=\"10\"\n                                onFocus={this.handleInvalidFocus}\n                            />\n                            {renderError('aboutError')}\n                            <label htmlFor=\"about\" className=\"horizontal-label\">Сопроводительные письма очень важны, потому что работа в чате напрямую связана с письменным выражением своих мыслей. Если письмо шаблонное или состоит из двух предложений (250 символов) — считаем, что его нет <span role=\"img\" aria-label=\"smile\">🙂</span></label>\n                        </div>\n                    </div>\n\n                    <button className=\"button\" type=\"submit\">Перейти к тесту</button>\n\n                    <p className=\"agreement\">Я соглашаюсь передать свои персональные данные, содержащиеся в анкете и всех приложенных файлах, в КИВИ Банк (АО) исключительно для того, чтобы КИВИ Банк (АО) мог предлагать мне вакансии. Я понимаю и соглашаюсь, что мои данные будут храниться и&nbsp;обрабатываться КИВИ Банк (АО) в&nbsp;течение десяти лет, в соответствии с&nbsp;Федеральным законом «О персональных данных».</p>\n                    <p className=\"get-card\">Кстати, если у вас еще нет карты Рокетбанка, заказать можно <a href=\"https://rocketbank.ru/welcome/\" className=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">здесь</a>.</p>\n                </form>\n            </div>\n        </section>\n    )}\n}\n\nexport default Profile","import React from 'react'\nimport './Final.scss'\n\nconst final = (props) => {\n    let classes = props.isMobile ? 'Final' : 'Final shadow-box'\n    \n    return(\n        <section className={classes}>\n            <p>Спасибо, анкета отправлена!</p>\n            <p>Мы все проверим и свяжемся с тобой в течение 2-3 рабочих дней.<br/>\n                Не переживай, если сразу не получил обратной связи, мы обязательно дадим тебе ответ по заявке.</p>\n            <p>Удачи!</p>\n        </section>\n    )\n}\n\nexport default final","import React, { Component } from 'react'\nimport Profile from './components/Profile/Profile'\nimport Final from './components/Final/Final'\nimport './App.scss'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.showFinal = this.showFinal.bind(this)\n    }\n\n    state = {\n        currentStep: 'profile'\n    }\n\n    showFinal() {\n        this.setState({ currentStep: 'final' })\n    }\n\n    render() {\n        const isMobile = () => {\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                return true\n            } else {\n                return false\n            }\n        }\n\n        let step\n        if (this.state.currentStep === 'profile') {\n            step = <Profile showFinal={this.showFinal} isMobile={isMobile()} />\n        } else {\n            step = <Final isMobile={isMobile()} />\n        }\n\n        return (\n            <div className=\"App\">\n                {step}\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}